X = regular_mesh([5,5,5],[1,1,1]/5,1);
X
X =
  1×3 <a href="matlab:helpPopup cell" style="font-weight:bold">cell</a> array
    {6×6×6 double}    {6×6×6 double}    {6×6×6 double}
edit mass_cons_flux_test
edit mass_cons_flux
edit mass_cons_flux
edit mat_gen_wind_flux_div
DM=mat_gen_wind_flux_div(X)
type =
    'DM'
DM =
   (1,1)      -0.0400
   (1,2)       0.0400
   (2,2)      -0.0400
   (2,3)       0.0400
   (3,3)      -0.0400
   (3,4)       0.0400
   (4,4)      -0.0400
   (4,5)       0.0400
   (5,5)      -0.0400
   (5,6)       0.0400
   (6,7)      -0.0400
   (6,8)       0.0400
   (7,8)      -0.0400
   (7,9)       0.0400
   (8,9)      -0.0400
   (8,10)      0.0400
   (9,10)     -0.0400
   (9,11)      0.0400
  (10,11)     -0.0400
  (10,12)      0.0400
  (11,13)     -0.0400
  (11,14)      0.0400
  (12,14)     -0.0400
  (12,15)      0.0400
  (13,15)     -0.0400
  (13,16)      0.0400
  (14,16)     -0.0400
  (14,17)      0.0400
  (15,17)     -0.0400
  (15,18)      0.0400
  (16,19)     -0.0400
  (16,20)      0.0400
  (17,20)     -0.0400
  (17,21)      0.0400
  (18,21)     -0.0400
  (18,22)      0.0400
  (19,22)     -0.0400
  (19,23)      0.0400
  (20,23)     -0.0400
  (20,24)      0.0400
  (21,25)     -0.0400
  (21,26)      0.0400
  (22,26)     -0.0400
  (22,27)      0.0400
  (23,27)     -0.0400
  (23,28)      0.0400
  (24,28)     -0.0400
  (24,29)      0.0400
  (25,29)     -0.0400
  (25,30)      0.0400
  (26,31)     -0.0400
  (26,32)      0.0400
  (27,32)     -0.0400
  (27,33)      0.0400
  (28,33)     -0.0400
  (28,34)      0.0400
  (29,34)     -0.0400
  (29,35)      0.0400
  (30,35)     -0.0400
  (30,36)      0.0400
  (31,37)     -0.0400
  (31,38)      0.0400
  (32,38)     -0.0400
  (32,39)      0.0400
  (33,39)     -0.0400
  (33,40)      0.0400
  (34,40)     -0.0400
  (34,41)      0.0400
  (35,41)     -0.0400
  (35,42)      0.0400
  (36,43)     -0.0400
  (36,44)      0.0400
  (37,44)     -0.0400
  (37,45)      0.0400
  (38,45)     -0.0400
  (38,46)      0.0400
  (39,46)     -0.0400
  (39,47)      0.0400
  (40,47)     -0.0400
  (40,48)      0.0400
  (41,49)     -0.0400
  (41,50)      0.0400
  (42,50)     -0.0400
  (42,51)      0.0400
  (43,51)     -0.0400
  (43,52)      0.0400
  (44,52)     -0.0400
  (44,53)      0.0400
  (45,53)     -0.0400
  (45,54)      0.0400
  (46,55)     -0.0400
  (46,56)      0.0400
  (47,56)     -0.0400
  (47,57)      0.0400
  (48,57)     -0.0400
  (48,58)      0.0400
  (49,58)     -0.0400
  (49,59)      0.0400
  (50,59)     -0.0400
  (50,60)      0.0400
  (51,61)     -0.0400
  (51,62)      0.0400
  (52,62)     -0.0400
  (52,63)      0.0400
  (53,63)     -0.0400
  (53,64)      0.0400
  (54,64)     -0.0400
  (54,65)      0.0400
  (55,65)     -0.0400
  (55,66)      0.0400
  (56,67)     -0.0400
  (56,68)      0.0400
  (57,68)     -0.0400
  (57,69)      0.0400
  (58,69)     -0.0400
  (58,70)      0.0400
  (59,70)     -0.0400
  (59,71)      0.0400
  (60,71)     -0.0400
  (60,72)      0.0400
  (61,73)     -0.0400
  (61,74)      0.0400
  (62,74)     -0.0400
  (62,75)      0.0400
  (63,75)     -0.0400
  (63,76)      0.0400
  (64,76)     -0.0400
  (64,77)      0.0400
  (65,77)     -0.0400
  (65,78)      0.0400
  (66,79)     -0.0400
  (66,80)      0.0400
  (67,80)     -0.0400
  (67,81)      0.0400
  (68,81)     -0.0400
  (68,82)      0.0400
  (69,82)     -0.0400
  (69,83)      0.0400
  (70,83)     -0.0400
  (70,84)      0.0400
  (71,85)     -0.0400
  (71,86)      0.0400
  (72,86)     -0.0400
  (72,87)      0.0400
  (73,87)     -0.0400
  (73,88)      0.0400
  (74,88)     -0.0400
  (74,89)      0.0400
  (75,89)     -0.0400
  (75,90)      0.0400
  (76,91)     -0.0400
  (76,92)      0.0400
  (77,92)     -0.0400
  (77,93)      0.0400
  (78,93)     -0.0400
  (78,94)      0.0400
  (79,94)     -0.0400
  (79,95)      0.0400
  (80,95)     -0.0400
  (80,96)      0.0400
  (81,97)     -0.0400
  (81,98)      0.0400
  (82,98)     -0.0400
  (82,99)      0.0400
  (83,99)     -0.0400
  (83,100)     0.0400
  (84,100)    -0.0400
  (84,101)     0.0400
  (85,101)    -0.0400
  (85,102)     0.0400
  (86,103)    -0.0400
  (86,104)     0.0400
  (87,104)    -0.0400
  (87,105)     0.0400
  (88,105)    -0.0400
  (88,106)     0.0400
  (89,106)    -0.0400
  (89,107)     0.0400
  (90,107)    -0.0400
  (90,108)     0.0400
  (91,109)    -0.0400
  (91,110)     0.0400
  (92,110)    -0.0400
  (92,111)     0.0400
  (93,111)    -0.0400
  (93,112)     0.0400
  (94,112)    -0.0400
  (94,113)     0.0400
  (95,113)    -0.0400
  (95,114)     0.0400
  (96,115)    -0.0400
  (96,116)     0.0400
  (97,116)    -0.0400
  (97,117)     0.0400
  (98,117)    -0.0400
  (98,118)     0.0400
  (99,118)    -0.0400
  (99,119)     0.0400
 (100,119)    -0.0400
 (100,120)     0.0400
 (101,121)    -0.0400
 (101,122)     0.0400
 (102,122)    -0.0400
 (102,123)     0.0400
 (103,123)    -0.0400
 (103,124)     0.0400
 (104,124)    -0.0400
 (104,125)     0.0400
 (105,125)    -0.0400
 (105,126)     0.0400
 (106,127)    -0.0400
 (106,128)     0.0400
 (107,128)    -0.0400
 (107,129)     0.0400
 (108,129)    -0.0400
 (108,130)     0.0400
 (109,130)    -0.0400
 (109,131)     0.0400
 (110,131)    -0.0400
 (110,132)     0.0400
 (111,133)    -0.0400
 (111,134)     0.0400
 (112,134)    -0.0400
 (112,135)     0.0400
 (113,135)    -0.0400
 (113,136)     0.0400
 (114,136)    -0.0400
 (114,137)     0.0400
 (115,137)    -0.0400
 (115,138)     0.0400
 (116,139)    -0.0400
 (116,140)     0.0400
 (117,140)    -0.0400
 (117,141)     0.0400
 (118,141)    -0.0400
 (118,142)     0.0400
 (119,142)    -0.0400
 (119,143)     0.0400
 (120,143)    -0.0400
 (120,144)     0.0400
 (121,145)    -0.0400
 (121,146)     0.0400
 (122,146)    -0.0400
 (122,147)     0.0400
 (123,147)    -0.0400
 (123,148)     0.0400
 (124,148)    -0.0400
 (124,149)     0.0400
 (125,149)    -0.0400
 (125,150)     0.0400
   (1,151)    -0.0400
   (2,152)    -0.0400
   (3,153)    -0.0400
   (4,154)    -0.0400
   (5,155)    -0.0400
   (1,156)     0.0400
   (6,156)    -0.0400
   (2,157)     0.0400
   (7,157)    -0.0400
   (3,158)     0.0400
   (8,158)    -0.0400
   (4,159)     0.0400
   (9,159)    -0.0400
   (5,160)     0.0400
  (10,160)    -0.0400
   (6,161)     0.0400
  (11,161)    -0.0400
   (7,162)     0.0400
  (12,162)    -0.0400
   (8,163)     0.0400
  (13,163)    -0.0400
   (9,164)     0.0400
  (14,164)    -0.0400
  (10,165)     0.0400
  (15,165)    -0.0400
  (11,166)     0.0400
  (16,166)    -0.0400
  (12,167)     0.0400
  (17,167)    -0.0400
  (13,168)     0.0400
  (18,168)    -0.0400
  (14,169)     0.0400
  (19,169)    -0.0400
  (15,170)     0.0400
  (20,170)    -0.0400
  (16,171)     0.0400
  (21,171)    -0.0400
  (17,172)     0.0400
  (22,172)    -0.0400
  (18,173)     0.0400
  (23,173)    -0.0400
  (19,174)     0.0400
  (24,174)    -0.0400
  (20,175)     0.0400
  (25,175)    -0.0400
  (21,176)     0.0400
  (22,177)     0.0400
  (23,178)     0.0400
  (24,179)     0.0400
  (25,180)     0.0400
  (26,181)    -0.0400
  (27,182)    -0.0400
  (28,183)    -0.0400
  (29,184)    -0.0400
  (30,185)    -0.0400
  (26,186)     0.0400
  (31,186)    -0.0400
  (27,187)     0.0400
  (32,187)    -0.0400
  (28,188)     0.0400
  (33,188)    -0.0400
  (29,189)     0.0400
  (34,189)    -0.0400
  (30,190)     0.0400
  (35,190)    -0.0400
  (31,191)     0.0400
  (36,191)    -0.0400
  (32,192)     0.0400
  (37,192)    -0.0400
  (33,193)     0.0400
  (38,193)    -0.0400
  (34,194)     0.0400
  (39,194)    -0.0400
  (35,195)     0.0400
  (40,195)    -0.0400
  (36,196)     0.0400
  (41,196)    -0.0400
  (37,197)     0.0400
  (42,197)    -0.0400
  (38,198)     0.0400
  (43,198)    -0.0400
  (39,199)     0.0400
  (44,199)    -0.0400
  (40,200)     0.0400
  (45,200)    -0.0400
  (41,201)     0.0400
  (46,201)    -0.0400
  (42,202)     0.0400
  (47,202)    -0.0400
  (43,203)     0.0400
  (48,203)    -0.0400
  (44,204)     0.0400
  (49,204)    -0.0400
  (45,205)     0.0400
  (50,205)    -0.0400
  (46,206)     0.0400
  (47,207)     0.0400
  (48,208)     0.0400
  (49,209)     0.0400
  (50,210)     0.0400
  (51,211)    -0.0400
  (52,212)    -0.0400
  (53,213)    -0.0400
  (54,214)    -0.0400
  (55,215)    -0.0400
  (51,216)     0.0400
  (56,216)    -0.0400
  (52,217)     0.0400
  (57,217)    -0.0400
  (53,218)     0.0400
  (58,218)    -0.0400
  (54,219)     0.0400
  (59,219)    -0.0400
  (55,220)     0.0400
  (60,220)    -0.0400
  (56,221)     0.0400
  (61,221)    -0.0400
  (57,222)     0.0400
  (62,222)    -0.0400
  (58,223)     0.0400
  (63,223)    -0.0400
  (59,224)     0.0400
  (64,224)    -0.0400
  (60,225)     0.0400
  (65,225)    -0.0400
  (61,226)     0.0400
  (66,226)    -0.0400
  (62,227)     0.0400
  (67,227)    -0.0400
  (63,228)     0.0400
  (68,228)    -0.0400
  (64,229)     0.0400
  (69,229)    -0.0400
  (65,230)     0.0400
  (70,230)    -0.0400
  (66,231)     0.0400
  (71,231)    -0.0400
  (67,232)     0.0400
  (72,232)    -0.0400
  (68,233)     0.0400
  (73,233)    -0.0400
  (69,234)     0.0400
  (74,234)    -0.0400
  (70,235)     0.0400
  (75,235)    -0.0400
  (71,236)     0.0400
  (72,237)     0.0400
  (73,238)     0.0400
  (74,239)     0.0400
  (75,240)     0.0400
  (76,241)    -0.0400
  (77,242)    -0.0400
  (78,243)    -0.0400
  (79,244)    -0.0400
  (80,245)    -0.0400
  (76,246)     0.0400
  (81,246)    -0.0400
  (77,247)     0.0400
  (82,247)    -0.0400
  (78,248)     0.0400
  (83,248)    -0.0400
  (79,249)     0.0400
  (84,249)    -0.0400
  (80,250)     0.0400
  (85,250)    -0.0400
  (81,251)     0.0400
  (86,251)    -0.0400
  (82,252)     0.0400
  (87,252)    -0.0400
  (83,253)     0.0400
  (88,253)    -0.0400
  (84,254)     0.0400
  (89,254)    -0.0400
  (85,255)     0.0400
  (90,255)    -0.0400
  (86,256)     0.0400
  (91,256)    -0.0400
  (87,257)     0.0400
  (92,257)    -0.0400
  (88,258)     0.0400
  (93,258)    -0.0400
  (89,259)     0.0400
  (94,259)    -0.0400
  (90,260)     0.0400
  (95,260)    -0.0400
  (91,261)     0.0400
  (96,261)    -0.0400
  (92,262)     0.0400
  (97,262)    -0.0400
  (93,263)     0.0400
  (98,263)    -0.0400
  (94,264)     0.0400
  (99,264)    -0.0400
  (95,265)     0.0400
 (100,265)    -0.0400
  (96,266)     0.0400
  (97,267)     0.0400
  (98,268)     0.0400
  (99,269)     0.0400
 (100,270)     0.0400
 (101,271)    -0.0400
 (102,272)    -0.0400
 (103,273)    -0.0400
 (104,274)    -0.0400
 (105,275)    -0.0400
 (101,276)     0.0400
 (106,276)    -0.0400
 (102,277)     0.0400
 (107,277)    -0.0400
 (103,278)     0.0400
 (108,278)    -0.0400
 (104,279)     0.0400
 (109,279)    -0.0400
 (105,280)     0.0400
 (110,280)    -0.0400
 (106,281)     0.0400
 (111,281)    -0.0400
 (107,282)     0.0400
 (112,282)    -0.0400
 (108,283)     0.0400
 (113,283)    -0.0400
 (109,284)     0.0400
 (114,284)    -0.0400
 (110,285)     0.0400
 (115,285)    -0.0400
 (111,286)     0.0400
 (116,286)    -0.0400
 (112,287)     0.0400
 (117,287)    -0.0400
 (113,288)     0.0400
 (118,288)    -0.0400
 (114,289)     0.0400
 (119,289)    -0.0400
 (115,290)     0.0400
 (120,290)    -0.0400
 (116,291)     0.0400
 (121,291)    -0.0400
 (117,292)     0.0400
 (122,292)    -0.0400
 (118,293)     0.0400
 (123,293)    -0.0400
 (119,294)     0.0400
 (124,294)    -0.0400
 (120,295)     0.0400
 (125,295)    -0.0400
 (121,296)     0.0400
 (122,297)     0.0400
 (123,298)     0.0400
 (124,299)     0.0400
 (125,300)     0.0400
   (1,326)     0.0400
  (26,326)    -0.0400
   (2,327)     0.0400
  (27,327)    -0.0400
   (3,328)     0.0400
  (28,328)    -0.0400
   (4,329)     0.0400
  (29,329)    -0.0400
   (5,330)     0.0400
  (30,330)    -0.0400
   (6,331)     0.0400
  (31,331)    -0.0400
   (7,332)     0.0400
  (32,332)    -0.0400
   (8,333)     0.0400
  (33,333)    -0.0400
   (9,334)     0.0400
  (34,334)    -0.0400
  (10,335)     0.0400
  (35,335)    -0.0400
  (11,336)     0.0400
  (36,336)    -0.0400
  (12,337)     0.0400
  (37,337)    -0.0400
  (13,338)     0.0400
  (38,338)    -0.0400
  (14,339)     0.0400
  (39,339)    -0.0400
  (15,340)     0.0400
  (40,340)    -0.0400
  (16,341)     0.0400
  (41,341)    -0.0400
  (17,342)     0.0400
  (42,342)    -0.0400
  (18,343)     0.0400
  (43,343)    -0.0400
  (19,344)     0.0400
  (44,344)    -0.0400
  (20,345)     0.0400
  (45,345)    -0.0400
  (21,346)     0.0400
  (46,346)    -0.0400
  (22,347)     0.0400
  (47,347)    -0.0400
  (23,348)     0.0400
  (48,348)    -0.0400
  (24,349)     0.0400
  (49,349)    -0.0400
  (25,350)     0.0400
  (50,350)    -0.0400
  (26,351)     0.0400
  (51,351)    -0.0400
  (27,352)     0.0400
  (52,352)    -0.0400
  (28,353)     0.0400
  (53,353)    -0.0400
  (29,354)     0.0400
  (54,354)    -0.0400
  (30,355)     0.0400
  (55,355)    -0.0400
  (31,356)     0.0400
  (56,356)    -0.0400
  (32,357)     0.0400
  (57,357)    -0.0400
  (33,358)     0.0400
  (58,358)    -0.0400
  (34,359)     0.0400
  (59,359)    -0.0400
  (35,360)     0.0400
  (60,360)    -0.0400
  (36,361)     0.0400
  (61,361)    -0.0400
  (37,362)     0.0400
  (62,362)    -0.0400
  (38,363)     0.0400
  (63,363)    -0.0400
  (39,364)     0.0400
  (64,364)    -0.0400
  (40,365)     0.0400
  (65,365)    -0.0400
  (41,366)     0.0400
  (66,366)    -0.0400
  (42,367)     0.0400
  (67,367)    -0.0400
  (43,368)     0.0400
  (68,368)    -0.0400
  (44,369)     0.0400
  (69,369)    -0.0400
  (45,370)     0.0400
  (70,370)    -0.0400
  (46,371)     0.0400
  (71,371)    -0.0400
  (47,372)     0.0400
  (72,372)    -0.0400
  (48,373)     0.0400
  (73,373)    -0.0400
  (49,374)     0.0400
  (74,374)    -0.0400
  (50,375)     0.0400
  (75,375)    -0.0400
  (51,376)     0.0400
  (76,376)    -0.0400
  (52,377)     0.0400
  (77,377)    -0.0400
  (53,378)     0.0400
  (78,378)    -0.0400
  (54,379)     0.0400
  (79,379)    -0.0400
  (55,380)     0.0400
  (80,380)    -0.0400
  (56,381)     0.0400
  (81,381)    -0.0400
  (57,382)     0.0400
  (82,382)    -0.0400
  (58,383)     0.0400
  (83,383)    -0.0400
  (59,384)     0.0400
  (84,384)    -0.0400
  (60,385)     0.0400
  (85,385)    -0.0400
  (61,386)     0.0400
  (86,386)    -0.0400
  (62,387)     0.0400
  (87,387)    -0.0400
  (63,388)     0.0400
  (88,388)    -0.0400
  (64,389)     0.0400
  (89,389)    -0.0400
  (65,390)     0.0400
  (90,390)    -0.0400
  (66,391)     0.0400
  (91,391)    -0.0400
  (67,392)     0.0400
  (92,392)    -0.0400
  (68,393)     0.0400
  (93,393)    -0.0400
  (69,394)     0.0400
  (94,394)    -0.0400
  (70,395)     0.0400
  (95,395)    -0.0400
  (71,396)     0.0400
  (96,396)    -0.0400
  (72,397)     0.0400
  (97,397)    -0.0400
  (73,398)     0.0400
  (98,398)    -0.0400
  (74,399)     0.0400
  (99,399)    -0.0400
  (75,400)     0.0400
 (100,400)    -0.0400
  (76,401)     0.0400
 (101,401)    -0.0400
  (77,402)     0.0400
 (102,402)    -0.0400
  (78,403)     0.0400
 (103,403)    -0.0400
  (79,404)     0.0400
 (104,404)    -0.0400
  (80,405)     0.0400
 (105,405)    -0.0400
  (81,406)     0.0400
 (106,406)    -0.0400
  (82,407)     0.0400
 (107,407)    -0.0400
  (83,408)     0.0400
 (108,408)    -0.0400
  (84,409)     0.0400
 (109,409)    -0.0400
  (85,410)     0.0400
 (110,410)    -0.0400
  (86,411)     0.0400
 (111,411)    -0.0400
  (87,412)     0.0400
 (112,412)    -0.0400
  (88,413)     0.0400
 (113,413)    -0.0400
  (89,414)     0.0400
 (114,414)    -0.0400
  (90,415)     0.0400
 (115,415)    -0.0400
  (91,416)     0.0400
 (116,416)    -0.0400
  (92,417)     0.0400
 (117,417)    -0.0400
  (93,418)     0.0400
 (118,418)    -0.0400
  (94,419)     0.0400
 (119,419)    -0.0400
  (95,420)     0.0400
 (120,420)    -0.0400
  (96,421)     0.0400
 (121,421)    -0.0400
  (97,422)     0.0400
 (122,422)    -0.0400
  (98,423)     0.0400
 (123,423)    -0.0400
  (99,424)     0.0400
 (124,424)    -0.0400
 (100,425)     0.0400
 (125,425)    -0.0400
 (101,426)     0.0400
 (102,427)     0.0400
 (103,428)     0.0400
 (104,429)     0.0400
 (105,430)     0.0400
 (106,431)     0.0400
 (107,432)     0.0400
 (108,433)     0.0400
 (109,434)     0.0400
 (110,435)     0.0400
 (111,436)     0.0400
 (112,437)     0.0400
 (113,438)     0.0400
 (114,439)     0.0400
 (115,440)     0.0400
 (116,441)     0.0400
 (117,442)     0.0400
 (118,443)     0.0400
 (119,444)     0.0400
 (120,445)     0.0400
 (121,446)     0.0400
 (122,447)     0.0400
 (123,448)     0.0400
 (124,449)     0.0400
 (125,450)     0.0400
DM=full(DM);
whos
  Name              Size              Bytes  Class     Attributes

  DM              125x450            450000  double              
  X                 1x3                5520  cell                
  ans               6x6x6              1728  double              
  bits              1x1                   8  double              
  c                 1x64                128  char                
  i                 1x1                   8  double              
  known_bits        1x1                   8  double              
  p                 2x2x2                 8  sym                 

L=sym('L_',[5 5 5])
L(:,:,1) =
[ L_1_1_1, L_1_2_1, L_1_3_1, L_1_4_1, L_1_5_1]
[ L_2_1_1, L_2_2_1, L_2_3_1, L_2_4_1, L_2_5_1]
[ L_3_1_1, L_3_2_1, L_3_3_1, L_3_4_1, L_3_5_1]
[ L_4_1_1, L_4_2_1, L_4_3_1, L_4_4_1, L_4_5_1]
[ L_5_1_1, L_5_2_1, L_5_3_1, L_5_4_1, L_5_5_1]
L(:,:,2) =
[ L_1_1_2, L_1_2_2, L_1_3_2, L_1_4_2, L_1_5_2]
[ L_2_1_2, L_2_2_2, L_2_3_2, L_2_4_2, L_2_5_2]
[ L_3_1_2, L_3_2_2, L_3_3_2, L_3_4_2, L_3_5_2]
[ L_4_1_2, L_4_2_2, L_4_3_2, L_4_4_2, L_4_5_2]
[ L_5_1_2, L_5_2_2, L_5_3_2, L_5_4_2, L_5_5_2]
L(:,:,3) =
[ L_1_1_3, L_1_2_3, L_1_3_3, L_1_4_3, L_1_5_3]
[ L_2_1_3, L_2_2_3, L_2_3_3, L_2_4_3, L_2_5_3]
[ L_3_1_3, L_3_2_3, L_3_3_3, L_3_4_3, L_3_5_3]
[ L_4_1_3, L_4_2_3, L_4_3_3, L_4_4_3, L_4_5_3]
[ L_5_1_3, L_5_2_3, L_5_3_3, L_5_4_3, L_5_5_3]
L(:,:,4) =
[ L_1_1_4, L_1_2_4, L_1_3_4, L_1_4_4, L_1_5_4]
[ L_2_1_4, L_2_2_4, L_2_3_4, L_2_4_4, L_2_5_4]
[ L_3_1_4, L_3_2_4, L_3_3_4, L_3_4_4, L_3_5_4]
[ L_4_1_4, L_4_2_4, L_4_3_4, L_4_4_4, L_4_5_4]
[ L_5_1_4, L_5_2_4, L_5_3_4, L_5_4_4, L_5_5_4]
L(:,:,5) =
[ L_1_1_5, L_1_2_5, L_1_3_5, L_1_4_5, L_1_5_5]
[ L_2_1_5, L_2_2_5, L_2_3_5, L_2_4_5, L_2_5_5]
[ L_3_1_5, L_3_2_5, L_3_3_5, L_3_4_5, L_3_5_5]
[ L_4_1_5, L_4_2_5, L_4_3_5, L_4_4_5, L_4_5_5]
[ L_5_1_5, L_5_2_5, L_5_3_5, L_5_4_5, L_5_5_5]
help grad3z
  u=<strong>grad3z</strong>(f,h)
  compute gradient in 3d assuming zero boundary conditions
  u=<strong>grad3z</strong>(f,h,b) 
  in 3rd coordinate use reflection at bottom instead of zero
  input:
     f       3d array
     h(1:3)  stepsize
     b       use zero boundary condition on output at the bottom

edit grad3z
u=grad3z(L,[1,1,1])
{The following error occurred converting from sym to double:
Unable to convert expression into double array.
Error in <a href="matlab:matlab.internal.language.introspective.errorDocCallback('grad3z', '/Users/jmandel/Projects/wrf-fire-matlab/quicwind/grad3z.m', 18)" style="font-weight:bold">grad3z</a> (<a href="matlab: opentoline('/Users/jmandel/Projects/wrf-fire-matlab/quicwind/grad3z.m',18,0)">line 18</a>)
fz(2:n(1)+1,2:n(2)+1,2:n(3)+1)=f;} 
matlab.internal.language.introspective.errorDocCallback('grad3z', '/Users/jmandel/Projects/wrf-fire-matlab/quicwind/grad3z.m', 18)
opentoline('/Users/jmandel/Projects/wrf-fire-matlab/quicwind/grad3z.m',18,0)
u=grad3z(L,[1,1,1])
u =
  1×3 <a href="matlab:helpPopup cell" style="font-weight:bold">cell</a> array
    {5×4×4 sym}    {4×5×4 sym}    {4×4×5 sym}
u{1}
ans(:,:,1) =
[           L_1_1_1,           L_1_2_1,           L_1_3_1,           L_1_4_1]
[ L_2_1_1 - L_1_1_1, L_2_2_1 - L_1_2_1, L_2_3_1 - L_1_3_1, L_2_4_1 - L_1_4_1]
[ L_3_1_1 - L_2_1_1, L_3_2_1 - L_2_2_1, L_3_3_1 - L_2_3_1, L_3_4_1 - L_2_4_1]
[ L_4_1_1 - L_3_1_1, L_4_2_1 - L_3_2_1, L_4_3_1 - L_3_3_1, L_4_4_1 - L_3_4_1]
[ L_5_1_1 - L_4_1_1, L_5_2_1 - L_4_2_1, L_5_3_1 - L_4_3_1, L_5_4_1 - L_4_4_1]
ans(:,:,2) =
[           L_1_1_2,           L_1_2_2,           L_1_3_2,           L_1_4_2]
[ L_2_1_2 - L_1_1_2, L_2_2_2 - L_1_2_2, L_2_3_2 - L_1_3_2, L_2_4_2 - L_1_4_2]
[ L_3_1_2 - L_2_1_2, L_3_2_2 - L_2_2_2, L_3_3_2 - L_2_3_2, L_3_4_2 - L_2_4_2]
[ L_4_1_2 - L_3_1_2, L_4_2_2 - L_3_2_2, L_4_3_2 - L_3_3_2, L_4_4_2 - L_3_4_2]
[ L_5_1_2 - L_4_1_2, L_5_2_2 - L_4_2_2, L_5_3_2 - L_4_3_2, L_5_4_2 - L_4_4_2]
ans(:,:,3) =
[           L_1_1_3,           L_1_2_3,           L_1_3_3,           L_1_4_3]
[ L_2_1_3 - L_1_1_3, L_2_2_3 - L_1_2_3, L_2_3_3 - L_1_3_3, L_2_4_3 - L_1_4_3]
[ L_3_1_3 - L_2_1_3, L_3_2_3 - L_2_2_3, L_3_3_3 - L_2_3_3, L_3_4_3 - L_2_4_3]
[ L_4_1_3 - L_3_1_3, L_4_2_3 - L_3_2_3, L_4_3_3 - L_3_3_3, L_4_4_3 - L_3_4_3]
[ L_5_1_3 - L_4_1_3, L_5_2_3 - L_4_2_3, L_5_3_3 - L_4_3_3, L_5_4_3 - L_4_4_3]
ans(:,:,4) =
[           L_1_1_4,           L_1_2_4,           L_1_3_4,           L_1_4_4]
[ L_2_1_4 - L_1_1_4, L_2_2_4 - L_1_2_4, L_2_3_4 - L_1_3_4, L_2_4_4 - L_1_4_4]
[ L_3_1_4 - L_2_1_4, L_3_2_4 - L_2_2_4, L_3_3_4 - L_2_3_4, L_3_4_4 - L_2_4_4]
[ L_4_1_4 - L_3_1_4, L_4_2_4 - L_3_2_4, L_4_3_4 - L_3_3_4, L_4_4_4 - L_3_4_4]
[ L_5_1_4 - L_4_1_4, L_5_2_4 - L_4_2_4, L_5_3_4 - L_4_3_4, L_5_4_4 - L_4_4_4]
edit div3
d=div3(u,[1 1 1])
d(:,:,1) =
[           L_1_1_2 - 6*L_1_1_1 + L_1_2_1 + L_2_1_1,           L_1_1_1 - 6*L_1_2_1 + L_1_2_2 + L_1_3_1 + L_2_2_1,           L_1_2_1 - 6*L_1_3_1 + L_1_3_2 + L_1_4_1 + L_2_3_1,           L_1_3_1 - 6*L_1_4_1 + L_1_4_2 + L_1_5_1 + L_2_4_1]
[ L_1_1_1 - 6*L_2_1_1 + L_2_1_2 + L_2_2_1 + L_3_1_1, L_1_2_1 + L_2_1_1 - 6*L_2_2_1 + L_2_2_2 + L_2_3_1 + L_3_2_1, L_1_3_1 + L_2_2_1 - 6*L_2_3_1 + L_2_3_2 + L_2_4_1 + L_3_3_1, L_1_4_1 + L_2_3_1 - 6*L_2_4_1 + L_2_4_2 + L_2_5_1 + L_3_4_1]
[ L_2_1_1 - 6*L_3_1_1 + L_3_1_2 + L_3_2_1 + L_4_1_1, L_2_2_1 + L_3_1_1 - 6*L_3_2_1 + L_3_2_2 + L_3_3_1 + L_4_2_1, L_2_3_1 + L_3_2_1 - 6*L_3_3_1 + L_3_3_2 + L_3_4_1 + L_4_3_1, L_2_4_1 + L_3_3_1 - 6*L_3_4_1 + L_3_4_2 + L_3_5_1 + L_4_4_1]
[ L_3_1_1 - 6*L_4_1_1 + L_4_1_2 + L_4_2_1 + L_5_1_1, L_3_2_1 + L_4_1_1 - 6*L_4_2_1 + L_4_2_2 + L_4_3_1 + L_5_2_1, L_3_3_1 + L_4_2_1 - 6*L_4_3_1 + L_4_3_2 + L_4_4_1 + L_5_3_1, L_3_4_1 + L_4_3_1 - 6*L_4_4_1 + L_4_4_2 + L_4_5_1 + L_5_4_1]
d(:,:,2) =
[           L_1_1_1 - 6*L_1_1_2 + L_1_1_3 + L_1_2_2 + L_2_1_2,           L_1_1_2 + L_1_2_1 - 6*L_1_2_2 + L_1_2_3 + L_1_3_2 + L_2_2_2,           L_1_2_2 + L_1_3_1 - 6*L_1_3_2 + L_1_3_3 + L_1_4_2 + L_2_3_2,           L_1_3_2 + L_1_4_1 - 6*L_1_4_2 + L_1_4_3 + L_1_5_2 + L_2_4_2]
[ L_1_1_2 + L_2_1_1 - 6*L_2_1_2 + L_2_1_3 + L_2_2_2 + L_3_1_2, L_1_2_2 + L_2_1_2 + L_2_2_1 - 6*L_2_2_2 + L_2_2_3 + L_2_3_2 + L_3_2_2, L_1_3_2 + L_2_2_2 + L_2_3_1 - 6*L_2_3_2 + L_2_3_3 + L_2_4_2 + L_3_3_2, L_1_4_2 + L_2_3_2 + L_2_4_1 - 6*L_2_4_2 + L_2_4_3 + L_2_5_2 + L_3_4_2]
[ L_2_1_2 + L_3_1_1 - 6*L_3_1_2 + L_3_1_3 + L_3_2_2 + L_4_1_2, L_2_2_2 + L_3_1_2 + L_3_2_1 - 6*L_3_2_2 + L_3_2_3 + L_3_3_2 + L_4_2_2, L_2_3_2 + L_3_2_2 + L_3_3_1 - 6*L_3_3_2 + L_3_3_3 + L_3_4_2 + L_4_3_2, L_2_4_2 + L_3_3_2 + L_3_4_1 - 6*L_3_4_2 + L_3_4_3 + L_3_5_2 + L_4_4_2]
[ L_3_1_2 + L_4_1_1 - 6*L_4_1_2 + L_4_1_3 + L_4_2_2 + L_5_1_2, L_3_2_2 + L_4_1_2 + L_4_2_1 - 6*L_4_2_2 + L_4_2_3 + L_4_3_2 + L_5_2_2, L_3_3_2 + L_4_2_2 + L_4_3_1 - 6*L_4_3_2 + L_4_3_3 + L_4_4_2 + L_5_3_2, L_3_4_2 + L_4_3_2 + L_4_4_1 - 6*L_4_4_2 + L_4_4_3 + L_4_5_2 + L_5_4_2]
d(:,:,3) =
[           L_1_1_2 - 6*L_1_1_3 + L_1_1_4 + L_1_2_3 + L_2_1_3,           L_1_1_3 + L_1_2_2 - 6*L_1_2_3 + L_1_2_4 + L_1_3_3 + L_2_2_3,           L_1_2_3 + L_1_3_2 - 6*L_1_3_3 + L_1_3_4 + L_1_4_3 + L_2_3_3,           L_1_3_3 + L_1_4_2 - 6*L_1_4_3 + L_1_4_4 + L_1_5_3 + L_2_4_3]
[ L_1_1_3 + L_2_1_2 - 6*L_2_1_3 + L_2_1_4 + L_2_2_3 + L_3_1_3, L_1_2_3 + L_2_1_3 + L_2_2_2 - 6*L_2_2_3 + L_2_2_4 + L_2_3_3 + L_3_2_3, L_1_3_3 + L_2_2_3 + L_2_3_2 - 6*L_2_3_3 + L_2_3_4 + L_2_4_3 + L_3_3_3, L_1_4_3 + L_2_3_3 + L_2_4_2 - 6*L_2_4_3 + L_2_4_4 + L_2_5_3 + L_3_4_3]
[ L_2_1_3 + L_3_1_2 - 6*L_3_1_3 + L_3_1_4 + L_3_2_3 + L_4_1_3, L_2_2_3 + L_3_1_3 + L_3_2_2 - 6*L_3_2_3 + L_3_2_4 + L_3_3_3 + L_4_2_3, L_2_3_3 + L_3_2_3 + L_3_3_2 - 6*L_3_3_3 + L_3_3_4 + L_3_4_3 + L_4_3_3, L_2_4_3 + L_3_3_3 + L_3_4_2 - 6*L_3_4_3 + L_3_4_4 + L_3_5_3 + L_4_4_3]
[ L_3_1_3 + L_4_1_2 - 6*L_4_1_3 + L_4_1_4 + L_4_2_3 + L_5_1_3, L_3_2_3 + L_4_1_3 + L_4_2_2 - 6*L_4_2_3 + L_4_2_4 + L_4_3_3 + L_5_2_3, L_3_3_3 + L_4_2_3 + L_4_3_2 - 6*L_4_3_3 + L_4_3_4 + L_4_4_3 + L_5_3_3, L_3_4_3 + L_4_3_3 + L_4_4_2 - 6*L_4_4_3 + L_4_4_4 + L_4_5_3 + L_5_4_3]
d(:,:,4) =
[           L_1_1_3 - 6*L_1_1_4 + L_1_1_5 + L_1_2_4 + L_2_1_4,           L_1_1_4 + L_1_2_3 - 6*L_1_2_4 + L_1_2_5 + L_1_3_4 + L_2_2_4,           L_1_2_4 + L_1_3_3 - 6*L_1_3_4 + L_1_3_5 + L_1_4_4 + L_2_3_4,           L_1_3_4 + L_1_4_3 - 6*L_1_4_4 + L_1_4_5 + L_1_5_4 + L_2_4_4]
[ L_1_1_4 + L_2_1_3 - 6*L_2_1_4 + L_2_1_5 + L_2_2_4 + L_3_1_4, L_1_2_4 + L_2_1_4 + L_2_2_3 - 6*L_2_2_4 + L_2_2_5 + L_2_3_4 + L_3_2_4, L_1_3_4 + L_2_2_4 + L_2_3_3 - 6*L_2_3_4 + L_2_3_5 + L_2_4_4 + L_3_3_4, L_1_4_4 + L_2_3_4 + L_2_4_3 - 6*L_2_4_4 + L_2_4_5 + L_2_5_4 + L_3_4_4]
[ L_2_1_4 + L_3_1_3 - 6*L_3_1_4 + L_3_1_5 + L_3_2_4 + L_4_1_4, L_2_2_4 + L_3_1_4 + L_3_2_3 - 6*L_3_2_4 + L_3_2_5 + L_3_3_4 + L_4_2_4, L_2_3_4 + L_3_2_4 + L_3_3_3 - 6*L_3_3_4 + L_3_3_5 + L_3_4_4 + L_4_3_4, L_2_4_4 + L_3_3_4 + L_3_4_3 - 6*L_3_4_4 + L_3_4_5 + L_3_5_4 + L_4_4_4]
[ L_3_1_4 + L_4_1_3 - 6*L_4_1_4 + L_4_1_5 + L_4_2_4 + L_5_1_4, L_3_2_4 + L_4_1_4 + L_4_2_3 - 6*L_4_2_4 + L_4_2_5 + L_4_3_4 + L_5_2_4, L_3_3_4 + L_4_2_4 + L_4_3_3 - 6*L_4_3_4 + L_4_3_5 + L_4_4_4 + L_5_3_4, L_3_4_4 + L_4_3_4 + L_4_4_3 - 6*L_4_4_4 + L_4_4_5 + L_4_5_4 + L_5_4_4]
d
d(:,:,1) =
[           L_1_1_2 - 6*L_1_1_1 + L_1_2_1 + L_2_1_1,           L_1_1_1 - 6*L_1_2_1 + L_1_2_2 + L_1_3_1 + L_2_2_1,           L_1_2_1 - 6*L_1_3_1 + L_1_3_2 + L_1_4_1 + L_2_3_1,           L_1_3_1 - 6*L_1_4_1 + L_1_4_2 + L_1_5_1 + L_2_4_1]
[ L_1_1_1 - 6*L_2_1_1 + L_2_1_2 + L_2_2_1 + L_3_1_1, L_1_2_1 + L_2_1_1 - 6*L_2_2_1 + L_2_2_2 + L_2_3_1 + L_3_2_1, L_1_3_1 + L_2_2_1 - 6*L_2_3_1 + L_2_3_2 + L_2_4_1 + L_3_3_1, L_1_4_1 + L_2_3_1 - 6*L_2_4_1 + L_2_4_2 + L_2_5_1 + L_3_4_1]
[ L_2_1_1 - 6*L_3_1_1 + L_3_1_2 + L_3_2_1 + L_4_1_1, L_2_2_1 + L_3_1_1 - 6*L_3_2_1 + L_3_2_2 + L_3_3_1 + L_4_2_1, L_2_3_1 + L_3_2_1 - 6*L_3_3_1 + L_3_3_2 + L_3_4_1 + L_4_3_1, L_2_4_1 + L_3_3_1 - 6*L_3_4_1 + L_3_4_2 + L_3_5_1 + L_4_4_1]
[ L_3_1_1 - 6*L_4_1_1 + L_4_1_2 + L_4_2_1 + L_5_1_1, L_3_2_1 + L_4_1_1 - 6*L_4_2_1 + L_4_2_2 + L_4_3_1 + L_5_2_1, L_3_3_1 + L_4_2_1 - 6*L_4_3_1 + L_4_3_2 + L_4_4_1 + L_5_3_1, L_3_4_1 + L_4_3_1 - 6*L_4_4_1 + L_4_4_2 + L_4_5_1 + L_5_4_1]
d(:,:,2) =
[           L_1_1_1 - 6*L_1_1_2 + L_1_1_3 + L_1_2_2 + L_2_1_2,           L_1_1_2 + L_1_2_1 - 6*L_1_2_2 + L_1_2_3 + L_1_3_2 + L_2_2_2,           L_1_2_2 + L_1_3_1 - 6*L_1_3_2 + L_1_3_3 + L_1_4_2 + L_2_3_2,           L_1_3_2 + L_1_4_1 - 6*L_1_4_2 + L_1_4_3 + L_1_5_2 + L_2_4_2]
[ L_1_1_2 + L_2_1_1 - 6*L_2_1_2 + L_2_1_3 + L_2_2_2 + L_3_1_2, L_1_2_2 + L_2_1_2 + L_2_2_1 - 6*L_2_2_2 + L_2_2_3 + L_2_3_2 + L_3_2_2, L_1_3_2 + L_2_2_2 + L_2_3_1 - 6*L_2_3_2 + L_2_3_3 + L_2_4_2 + L_3_3_2, L_1_4_2 + L_2_3_2 + L_2_4_1 - 6*L_2_4_2 + L_2_4_3 + L_2_5_2 + L_3_4_2]
[ L_2_1_2 + L_3_1_1 - 6*L_3_1_2 + L_3_1_3 + L_3_2_2 + L_4_1_2, L_2_2_2 + L_3_1_2 + L_3_2_1 - 6*L_3_2_2 + L_3_2_3 + L_3_3_2 + L_4_2_2, L_2_3_2 + L_3_2_2 + L_3_3_1 - 6*L_3_3_2 + L_3_3_3 + L_3_4_2 + L_4_3_2, L_2_4_2 + L_3_3_2 + L_3_4_1 - 6*L_3_4_2 + L_3_4_3 + L_3_5_2 + L_4_4_2]
[ L_3_1_2 + L_4_1_1 - 6*L_4_1_2 + L_4_1_3 + L_4_2_2 + L_5_1_2, L_3_2_2 + L_4_1_2 + L_4_2_1 - 6*L_4_2_2 + L_4_2_3 + L_4_3_2 + L_5_2_2, L_3_3_2 + L_4_2_2 + L_4_3_1 - 6*L_4_3_2 + L_4_3_3 + L_4_4_2 + L_5_3_2, L_3_4_2 + L_4_3_2 + L_4_4_1 - 6*L_4_4_2 + L_4_4_3 + L_4_5_2 + L_5_4_2]
d(:,:,3) =
[           L_1_1_2 - 6*L_1_1_3 + L_1_1_4 + L_1_2_3 + L_2_1_3,           L_1_1_3 + L_1_2_2 - 6*L_1_2_3 + L_1_2_4 + L_1_3_3 + L_2_2_3,           L_1_2_3 + L_1_3_2 - 6*L_1_3_3 + L_1_3_4 + L_1_4_3 + L_2_3_3,           L_1_3_3 + L_1_4_2 - 6*L_1_4_3 + L_1_4_4 + L_1_5_3 + L_2_4_3]
[ L_1_1_3 + L_2_1_2 - 6*L_2_1_3 + L_2_1_4 + L_2_2_3 + L_3_1_3, L_1_2_3 + L_2_1_3 + L_2_2_2 - 6*L_2_2_3 + L_2_2_4 + L_2_3_3 + L_3_2_3, L_1_3_3 + L_2_2_3 + L_2_3_2 - 6*L_2_3_3 + L_2_3_4 + L_2_4_3 + L_3_3_3, L_1_4_3 + L_2_3_3 + L_2_4_2 - 6*L_2_4_3 + L_2_4_4 + L_2_5_3 + L_3_4_3]
[ L_2_1_3 + L_3_1_2 - 6*L_3_1_3 + L_3_1_4 + L_3_2_3 + L_4_1_3, L_2_2_3 + L_3_1_3 + L_3_2_2 - 6*L_3_2_3 + L_3_2_4 + L_3_3_3 + L_4_2_3, L_2_3_3 + L_3_2_3 + L_3_3_2 - 6*L_3_3_3 + L_3_3_4 + L_3_4_3 + L_4_3_3, L_2_4_3 + L_3_3_3 + L_3_4_2 - 6*L_3_4_3 + L_3_4_4 + L_3_5_3 + L_4_4_3]
[ L_3_1_3 + L_4_1_2 - 6*L_4_1_3 + L_4_1_4 + L_4_2_3 + L_5_1_3, L_3_2_3 + L_4_1_3 + L_4_2_2 - 6*L_4_2_3 + L_4_2_4 + L_4_3_3 + L_5_2_3, L_3_3_3 + L_4_2_3 + L_4_3_2 - 6*L_4_3_3 + L_4_3_4 + L_4_4_3 + L_5_3_3, L_3_4_3 + L_4_3_3 + L_4_4_2 - 6*L_4_4_3 + L_4_4_4 + L_4_5_3 + L_5_4_3]
d(:,:,4) =
[           L_1_1_3 - 6*L_1_1_4 + L_1_1_5 + L_1_2_4 + L_2_1_4,           L_1_1_4 + L_1_2_3 - 6*L_1_2_4 + L_1_2_5 + L_1_3_4 + L_2_2_4,           L_1_2_4 + L_1_3_3 - 6*L_1_3_4 + L_1_3_5 + L_1_4_4 + L_2_3_4,           L_1_3_4 + L_1_4_3 - 6*L_1_4_4 + L_1_4_5 + L_1_5_4 + L_2_4_4]
[ L_1_1_4 + L_2_1_3 - 6*L_2_1_4 + L_2_1_5 + L_2_2_4 + L_3_1_4, L_1_2_4 + L_2_1_4 + L_2_2_3 - 6*L_2_2_4 + L_2_2_5 + L_2_3_4 + L_3_2_4, L_1_3_4 + L_2_2_4 + L_2_3_3 - 6*L_2_3_4 + L_2_3_5 + L_2_4_4 + L_3_3_4, L_1_4_4 + L_2_3_4 + L_2_4_3 - 6*L_2_4_4 + L_2_4_5 + L_2_5_4 + L_3_4_4]
[ L_2_1_4 + L_3_1_3 - 6*L_3_1_4 + L_3_1_5 + L_3_2_4 + L_4_1_4, L_2_2_4 + L_3_1_4 + L_3_2_3 - 6*L_3_2_4 + L_3_2_5 + L_3_3_4 + L_4_2_4, L_2_3_4 + L_3_2_4 + L_3_3_3 - 6*L_3_3_4 + L_3_3_5 + L_3_4_4 + L_4_3_4, L_2_4_4 + L_3_3_4 + L_3_4_3 - 6*L_3_4_4 + L_3_4_5 + L_3_5_4 + L_4_4_4]
[ L_3_1_4 + L_4_1_3 - 6*L_4_1_4 + L_4_1_5 + L_4_2_4 + L_5_1_4, L_3_2_4 + L_4_1_4 + L_4_2_3 - 6*L_4_2_4 + L_4_2_5 + L_4_3_4 + L_5_2_4, L_3_3_4 + L_4_2_4 + L_4_3_3 - 6*L_4_3_4 + L_4_3_5 + L_4_4_4 + L_5_3_4, L_3_4_4 + L_4_3_4 + L_4_4_3 - 6*L_4_4_4 + L_4_4_5 + L_4_5_4 + L_5_4_4]
d(3,3,3)
ans =
L_2_3_3 + L_3_2_3 + L_3_3_2 - 6*L_3_3_3 + L_3_3_4 + L_3_4_3 + L_4_3_3
d(3,3,1)
ans =
L_2_3_1 + L_3_2_1 - 6*L_3_3_1 + L_3_3_2 + L_3_4_1 + L_4_3_1
u=grad3z(L,[1,1,1],0)
u =
  1×3 <a href="matlab:helpPopup cell" style="font-weight:bold">cell</a> array
    {5×4×4 sym}    {4×5×4 sym}    {4×4×5 sym}
d=div3(u,[1 1 1])
d(:,:,1) =
[           L_1_1_2 - 6*L_1_1_1 + L_1_2_1 + L_2_1_1,           L_1_1_1 - 6*L_1_2_1 + L_1_2_2 + L_1_3_1 + L_2_2_1,           L_1_2_1 - 6*L_1_3_1 + L_1_3_2 + L_1_4_1 + L_2_3_1,           L_1_3_1 - 6*L_1_4_1 + L_1_4_2 + L_1_5_1 + L_2_4_1]
[ L_1_1_1 - 6*L_2_1_1 + L_2_1_2 + L_2_2_1 + L_3_1_1, L_1_2_1 + L_2_1_1 - 6*L_2_2_1 + L_2_2_2 + L_2_3_1 + L_3_2_1, L_1_3_1 + L_2_2_1 - 6*L_2_3_1 + L_2_3_2 + L_2_4_1 + L_3_3_1, L_1_4_1 + L_2_3_1 - 6*L_2_4_1 + L_2_4_2 + L_2_5_1 + L_3_4_1]
[ L_2_1_1 - 6*L_3_1_1 + L_3_1_2 + L_3_2_1 + L_4_1_1, L_2_2_1 + L_3_1_1 - 6*L_3_2_1 + L_3_2_2 + L_3_3_1 + L_4_2_1, L_2_3_1 + L_3_2_1 - 6*L_3_3_1 + L_3_3_2 + L_3_4_1 + L_4_3_1, L_2_4_1 + L_3_3_1 - 6*L_3_4_1 + L_3_4_2 + L_3_5_1 + L_4_4_1]
[ L_3_1_1 - 6*L_4_1_1 + L_4_1_2 + L_4_2_1 + L_5_1_1, L_3_2_1 + L_4_1_1 - 6*L_4_2_1 + L_4_2_2 + L_4_3_1 + L_5_2_1, L_3_3_1 + L_4_2_1 - 6*L_4_3_1 + L_4_3_2 + L_4_4_1 + L_5_3_1, L_3_4_1 + L_4_3_1 - 6*L_4_4_1 + L_4_4_2 + L_4_5_1 + L_5_4_1]
d(:,:,2) =
[           L_1_1_1 - 6*L_1_1_2 + L_1_1_3 + L_1_2_2 + L_2_1_2,           L_1_1_2 + L_1_2_1 - 6*L_1_2_2 + L_1_2_3 + L_1_3_2 + L_2_2_2,           L_1_2_2 + L_1_3_1 - 6*L_1_3_2 + L_1_3_3 + L_1_4_2 + L_2_3_2,           L_1_3_2 + L_1_4_1 - 6*L_1_4_2 + L_1_4_3 + L_1_5_2 + L_2_4_2]
[ L_1_1_2 + L_2_1_1 - 6*L_2_1_2 + L_2_1_3 + L_2_2_2 + L_3_1_2, L_1_2_2 + L_2_1_2 + L_2_2_1 - 6*L_2_2_2 + L_2_2_3 + L_2_3_2 + L_3_2_2, L_1_3_2 + L_2_2_2 + L_2_3_1 - 6*L_2_3_2 + L_2_3_3 + L_2_4_2 + L_3_3_2, L_1_4_2 + L_2_3_2 + L_2_4_1 - 6*L_2_4_2 + L_2_4_3 + L_2_5_2 + L_3_4_2]
[ L_2_1_2 + L_3_1_1 - 6*L_3_1_2 + L_3_1_3 + L_3_2_2 + L_4_1_2, L_2_2_2 + L_3_1_2 + L_3_2_1 - 6*L_3_2_2 + L_3_2_3 + L_3_3_2 + L_4_2_2, L_2_3_2 + L_3_2_2 + L_3_3_1 - 6*L_3_3_2 + L_3_3_3 + L_3_4_2 + L_4_3_2, L_2_4_2 + L_3_3_2 + L_3_4_1 - 6*L_3_4_2 + L_3_4_3 + L_3_5_2 + L_4_4_2]
[ L_3_1_2 + L_4_1_1 - 6*L_4_1_2 + L_4_1_3 + L_4_2_2 + L_5_1_2, L_3_2_2 + L_4_1_2 + L_4_2_1 - 6*L_4_2_2 + L_4_2_3 + L_4_3_2 + L_5_2_2, L_3_3_2 + L_4_2_2 + L_4_3_1 - 6*L_4_3_2 + L_4_3_3 + L_4_4_2 + L_5_3_2, L_3_4_2 + L_4_3_2 + L_4_4_1 - 6*L_4_4_2 + L_4_4_3 + L_4_5_2 + L_5_4_2]
d(:,:,3) =
[           L_1_1_2 - 6*L_1_1_3 + L_1_1_4 + L_1_2_3 + L_2_1_3,           L_1_1_3 + L_1_2_2 - 6*L_1_2_3 + L_1_2_4 + L_1_3_3 + L_2_2_3,           L_1_2_3 + L_1_3_2 - 6*L_1_3_3 + L_1_3_4 + L_1_4_3 + L_2_3_3,           L_1_3_3 + L_1_4_2 - 6*L_1_4_3 + L_1_4_4 + L_1_5_3 + L_2_4_3]
[ L_1_1_3 + L_2_1_2 - 6*L_2_1_3 + L_2_1_4 + L_2_2_3 + L_3_1_3, L_1_2_3 + L_2_1_3 + L_2_2_2 - 6*L_2_2_3 + L_2_2_4 + L_2_3_3 + L_3_2_3, L_1_3_3 + L_2_2_3 + L_2_3_2 - 6*L_2_3_3 + L_2_3_4 + L_2_4_3 + L_3_3_3, L_1_4_3 + L_2_3_3 + L_2_4_2 - 6*L_2_4_3 + L_2_4_4 + L_2_5_3 + L_3_4_3]
[ L_2_1_3 + L_3_1_2 - 6*L_3_1_3 + L_3_1_4 + L_3_2_3 + L_4_1_3, L_2_2_3 + L_3_1_3 + L_3_2_2 - 6*L_3_2_3 + L_3_2_4 + L_3_3_3 + L_4_2_3, L_2_3_3 + L_3_2_3 + L_3_3_2 - 6*L_3_3_3 + L_3_3_4 + L_3_4_3 + L_4_3_3, L_2_4_3 + L_3_3_3 + L_3_4_2 - 6*L_3_4_3 + L_3_4_4 + L_3_5_3 + L_4_4_3]
[ L_3_1_3 + L_4_1_2 - 6*L_4_1_3 + L_4_1_4 + L_4_2_3 + L_5_1_3, L_3_2_3 + L_4_1_3 + L_4_2_2 - 6*L_4_2_3 + L_4_2_4 + L_4_3_3 + L_5_2_3, L_3_3_3 + L_4_2_3 + L_4_3_2 - 6*L_4_3_3 + L_4_3_4 + L_4_4_3 + L_5_3_3, L_3_4_3 + L_4_3_3 + L_4_4_2 - 6*L_4_4_3 + L_4_4_4 + L_4_5_3 + L_5_4_3]
d(:,:,4) =
[           L_1_1_3 - 6*L_1_1_4 + L_1_1_5 + L_1_2_4 + L_2_1_4,           L_1_1_4 + L_1_2_3 - 6*L_1_2_4 + L_1_2_5 + L_1_3_4 + L_2_2_4,           L_1_2_4 + L_1_3_3 - 6*L_1_3_4 + L_1_3_5 + L_1_4_4 + L_2_3_4,           L_1_3_4 + L_1_4_3 - 6*L_1_4_4 + L_1_4_5 + L_1_5_4 + L_2_4_4]
[ L_1_1_4 + L_2_1_3 - 6*L_2_1_4 + L_2_1_5 + L_2_2_4 + L_3_1_4, L_1_2_4 + L_2_1_4 + L_2_2_3 - 6*L_2_2_4 + L_2_2_5 + L_2_3_4 + L_3_2_4, L_1_3_4 + L_2_2_4 + L_2_3_3 - 6*L_2_3_4 + L_2_3_5 + L_2_4_4 + L_3_3_4, L_1_4_4 + L_2_3_4 + L_2_4_3 - 6*L_2_4_4 + L_2_4_5 + L_2_5_4 + L_3_4_4]
[ L_2_1_4 + L_3_1_3 - 6*L_3_1_4 + L_3_1_5 + L_3_2_4 + L_4_1_4, L_2_2_4 + L_3_1_4 + L_3_2_3 - 6*L_3_2_4 + L_3_2_5 + L_3_3_4 + L_4_2_4, L_2_3_4 + L_3_2_4 + L_3_3_3 - 6*L_3_3_4 + L_3_3_5 + L_3_4_4 + L_4_3_4, L_2_4_4 + L_3_3_4 + L_3_4_3 - 6*L_3_4_4 + L_3_4_5 + L_3_5_4 + L_4_4_4]
[ L_3_1_4 + L_4_1_3 - 6*L_4_1_4 + L_4_1_5 + L_4_2_4 + L_5_1_4, L_3_2_4 + L_4_1_4 + L_4_2_3 - 6*L_4_2_4 + L_4_2_5 + L_4_3_4 + L_5_2_4, L_3_3_4 + L_4_2_4 + L_4_3_3 - 6*L_4_3_4 + L_4_3_5 + L_4_4_4 + L_5_3_4, L_3_4_4 + L_4_3_4 + L_4_4_3 - 6*L_4_4_4 + L_4_4_5 + L_4_5_4 + L_5_4_4]
d(3,3,3)
ans =
L_2_3_3 + L_3_2_3 + L_3_3_2 - 6*L_3_3_3 + L_3_3_4 + L_3_4_3 + L_4_3_3
d(3,3,1)
ans =
L_2_3_1 + L_3_2_1 - 6*L_3_3_1 + L_3_3_2 + L_3_4_1 + L_4_3_1
u=grad3z(L,[1,1,1])
u =
  1×3 <a href="matlab:helpPopup cell" style="font-weight:bold">cell</a> array
    {5×4×4 sym}    {4×5×4 sym}    {4×4×5 sym}
u{3}(:,:,1)
ans =
[ L_1_1_1, L_1_2_1, L_1_3_1, L_1_4_1]
[ L_2_1_1, L_2_2_1, L_2_3_1, L_2_4_1]
[ L_3_1_1, L_3_2_1, L_3_3_1, L_3_4_1]
[ L_4_1_1, L_4_2_1, L_4_3_1, L_4_4_1]
u=grad3z(L,[1,1,1],0)
u =
  1×3 <a href="matlab:helpPopup cell" style="font-weight:bold">cell</a> array
    {5×4×4 sym}    {4×5×4 sym}    {4×4×5 sym}
X
X =
  1×3 <a href="matlab:helpPopup cell" style="font-weight:bold">cell</a> array
    {6×6×6 double}    {6×6×6 double}    {6×6×6 double}
L
L(:,:,1) =
[ L_1_1_1, L_1_2_1, L_1_3_1, L_1_4_1, L_1_5_1]
[ L_2_1_1, L_2_2_1, L_2_3_1, L_2_4_1, L_2_5_1]
[ L_3_1_1, L_3_2_1, L_3_3_1, L_3_4_1, L_3_5_1]
[ L_4_1_1, L_4_2_1, L_4_3_1, L_4_4_1, L_4_5_1]
[ L_5_1_1, L_5_2_1, L_5_3_1, L_5_4_1, L_5_5_1]
L(:,:,2) =
[ L_1_1_2, L_1_2_2, L_1_3_2, L_1_4_2, L_1_5_2]
[ L_2_1_2, L_2_2_2, L_2_3_2, L_2_4_2, L_2_5_2]
[ L_3_1_2, L_3_2_2, L_3_3_2, L_3_4_2, L_3_5_2]
[ L_4_1_2, L_4_2_2, L_4_3_2, L_4_4_2, L_4_5_2]
[ L_5_1_2, L_5_2_2, L_5_3_2, L_5_4_2, L_5_5_2]
L(:,:,3) =
[ L_1_1_3, L_1_2_3, L_1_3_3, L_1_4_3, L_1_5_3]
[ L_2_1_3, L_2_2_3, L_2_3_3, L_2_4_3, L_2_5_3]
[ L_3_1_3, L_3_2_3, L_3_3_3, L_3_4_3, L_3_5_3]
[ L_4_1_3, L_4_2_3, L_4_3_3, L_4_4_3, L_4_5_3]
[ L_5_1_3, L_5_2_3, L_5_3_3, L_5_4_3, L_5_5_3]
L(:,:,4) =
[ L_1_1_4, L_1_2_4, L_1_3_4, L_1_4_4, L_1_5_4]
[ L_2_1_4, L_2_2_4, L_2_3_4, L_2_4_4, L_2_5_4]
[ L_3_1_4, L_3_2_4, L_3_3_4, L_3_4_4, L_3_5_4]
[ L_4_1_4, L_4_2_4, L_4_3_4, L_4_4_4, L_4_5_4]
[ L_5_1_4, L_5_2_4, L_5_3_4, L_5_4_4, L_5_5_4]
L(:,:,5) =
[ L_1_1_5, L_1_2_5, L_1_3_5, L_1_4_5, L_1_5_5]
[ L_2_1_5, L_2_2_5, L_2_3_5, L_2_4_5, L_2_5_5]
[ L_3_1_5, L_3_2_5, L_3_3_5, L_3_4_5, L_3_5_5]
[ L_4_1_5, L_4_2_5, L_4_3_5, L_4_4_5, L_4_5_5]
[ L_5_1_5, L_5_2_5, L_5_3_5, L_5_4_5, L_5_5_5]
size(L)
ans =
     5     5     5
diary off
